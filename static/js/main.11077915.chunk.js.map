{"version":3,"sources":["components/GameRound/GameRound.module.css","components/Game/Game.module.css","components/Chip/Chip.module.css","components/RoundHistory/RoundHistory.module.css","components/Ranking/Ranking.module.css","components/Card/Card.module.css","components/Chip/Chip.js","AppConstants.js","Store.js","components/Card/Card.js","components/GameRound/GameRound.js","components/RoundHistory/RoundHistory.js","components/Game/Game.js","components/Ranking/Ranking.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","stylesList","styles","red","green","blue","gray","black","values","Chip","clickCallback","className","goldText","map","val","i","onClick","data-testid","defaultProps","API_BASE_URL","RANKING_KEY","Store","saveState","key","state","localStorage","setItem","JSON","stringify","getState","parse","getItem","Card","image","src","alt","GameRound","props","calculateScore","cards","score","asesAmount","forEach","card","Number","value","playerCards","dealerCards","playerScore","dealerScore","betDoubled","showDealersFstCard","onEndOfRound","bind","remeberedState","this","continueLastGame","setState","startGameRound","saveGameRound","getCards","then","resJson","prevState","checkResult","handleDealersMovement","playerHasHit","amount","fetch","deckID","res","json","winner","number","roundNumber","gameRoundHandlers","id","Button","handleHit","handleStand","disabled","length","handleDoubleDown","round","cardsContainer","Component","RoundHistory","historyHidden","console","log","rounds","toggleHistory","hidden","GAME_KEY","GAME_ROUND_KEY","Game","raiseBet","bet","betPlaced","roundsResults","credit","resultMessage","handleEndOfRound","saveGameInLocalStorage","window","addEventListener","removeEventListener","result","newCredit","handleEndOfGame","newResult","date","Date","toLocaleString","ranking","sort","a","b","slice","filter","r","confirm","game","chips","betHandler","dealBtns","placeBet","canStartNewRound","summaryOfTheGame","Snackbar","anchorOrigin","vertical","horizontal","Info","autoHideDuration","open","onClose","message","Ranking","table","Dialog","maxWidth","fullWidth","DialogTitle","App","onRankingClose","rankingOpened","gameState","shuffle","deck_id","resetGame","startGame","continueGame","onRankingOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11077915.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameRound\":\"GameRound_GameRound__St2ql\",\"cards\":\"GameRound_cards__3-lpi\",\"round\":\"GameRound_round__1zS6w\",\"cardsContainer\":\"GameRound_cardsContainer__aGNyG\",\"roundNumber\":\"GameRound_roundNumber__3-f6Q\",\"score\":\"GameRound_score__3g3mO\",\"gameRoundHandlers\":\"GameRound_gameRoundHandlers__2Oy80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__3OBnI\",\"Button\":\"Game_Button__2gD4V\",\"credit\":\"Game_credit__1sMef\",\"Info\":\"Game_Info__1Bo99\",\"dealBtns\":\"Game_dealBtns__14f6W\",\"goldText\":\"Game_goldText__20k-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chip\":\"Chip_Chip__15gnN\",\"red\":\"Chip_red__3iB90\",\"green\":\"Chip_green__VfWSm\",\"blue\":\"Chip_blue__fWd6X\",\"gray\":\"Chip_gray__en79z\",\"black\":\"Chip_black__1m-pp\",\"goldText\":\"Chip_goldText__3PX4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoundHistory\":\"RoundHistory_RoundHistory__WuEJi\",\"hidden\":\"RoundHistory_hidden__3_Vjo\",\"cards\":\"RoundHistory_cards__16r-K\",\"goldText\":\"RoundHistory_goldText__1zYx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ranking\":\"Ranking_Ranking__1Pk0Z\",\"goldText\":\"Ranking_goldText__1welU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__16tpa\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Chip.module.css';\n\nconst stylesList = [styles.red, styles.green, styles.blue, styles.gray, styles.black];\nconst values = [1, 5, 10, 100, 1000];\n\nconst Chip = ({ clickCallback }) => (\n  <div>\n    <h2 className={styles.goldText}>Place a bet and play!</h2>\n    {values.map((val, i) => (\n      <button\n        key={val}\n        onClick={() => clickCallback(val)}\n        className={`${styles.Chip} ${stylesList[i]}`}\n        data-testid=\"Chip\"\n      >\n        <div>{val}</div>\n      </button>\n    ))}\n  </div>\n);\n\nChip.propTypes = {\n  clickCallback: PropTypes.func.isRequired,\n};\n\nChip.defaultProps = {};\n\nexport default Chip;\n","export const API_BASE_URL = 'https://deckofcardsapi.com/api/deck/';\r\nexport const RANKING_KEY = 'RANKING_KEY';\r\n","const Store = {\r\n  saveState(key, state) {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  },\r\n  getState(key) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n};\r\n\r\nexport default Store;\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Card.module.css';\n\nconst Card = ({ image }) => (\n  <div className={styles.Card} data-testid=\"Card\">\n    <img src={image} alt=\"card\" />\n  </div>\n);\n\nCard.propTypes = {\n  image: PropTypes.string,\n};\n\nCard.defaultProps = {\n  image: '/card.png',\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport styles from './GameRound.module.css';\nimport { API_BASE_URL } from '../../AppConstants';\nimport Card from '../Card/Card';\nimport Store from '../../Store';\n\nconst GAME_ROUND_KEY = 'GAME_ROUND_KEY';\n\nexport default class GameRound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerCards: [],\n      dealerCards: [],\n      playerScore: 0,\n      dealerScore: 0,\n      betDoubled: false,\n      showDealersFstCard: false,\n    };\n    this.onEndOfRound = this.props.onEndOfRound.bind(this);\n  }\n\n  componentDidMount() {\n    const remeberedState = Store.getState(GAME_ROUND_KEY);\n    if (this.props.continueLastGame && remeberedState) {\n      this.setState(remeberedState);\n    } else this.startGameRound();\n  }\n\n  componentWillUnmount() {\n    this.props.saveGameRound(this.state);\n  }\n\n  handleHit() {\n    this.getCards(1).then((resJson) =>\n      this.setState(\n        (prevState) => ({\n          playerCards: [...prevState.playerCards, resJson.cards[0]],\n          playerScore: this.calculateScore([...prevState.playerCards, resJson.cards[0]]),\n        }),\n        () => {\n          if (this.state.playerScore >= 21) this.checkResult();\n          this.handleDealersMovement(true);\n        },\n      ),\n    );\n  }\n\n  handleStand() {\n    this.handleDealersMovement(false);\n  }\n\n  handleDoubleDown() {\n    this.setState({ betDoubled: true }, () => this.handleDealersMovement(false));\n  }\n\n  handleDealersMovement(playerHasHit) {\n    if (this.state.dealerScore <= 16) {\n      this.getCards(1).then((resJson) =>\n        this.setState(\n          (prevState) => ({\n            dealerCards: [...prevState.dealerCards, resJson.cards[0]],\n            dealerScore: this.calculateScore([...prevState.dealerCards, resJson.cards[0]]),\n            showDealersFstCard: true,\n          }),\n          () => {\n            if (this.state.dealerScore <= 16 && !playerHasHit) this.handleDealersMovement(false);\n            else if (!playerHasHit) this.checkResult();\n          },\n        ),\n      );\n    } else if (!playerHasHit) {\n      this.checkResult();\n    }\n  }\n\n  getCards(amount) {\n    return fetch(`${API_BASE_URL}${this.props.deckID}/draw/?count=${amount}`).then((res) =>\n      res.json(),\n    );\n  }\n\n  calculateScore = (cards) => {\n    let score = 0;\n    let asesAmount = 0;\n    cards.forEach((card) => {\n      if (Number(card.value)) {\n        score += Number(card.value);\n      } else if (card.value === 'ACE') asesAmount += 1;\n      else score += 10;\n    });\n    while (asesAmount > 0) {\n      asesAmount -= 1;\n      if (score + 11 + asesAmount <= 21) score += 11;\n      else score += 1;\n    }\n    return score;\n  };\n\n  checkResult() {\n    let winner = 'player';\n    if (\n      this.state.playerScore > 21 ||\n      (this.state.dealerScore < 21 && this.state.playerScore < this.state.dealerScore)\n    )\n      winner = 'dealer';\n    else if (this.state.playerScore < 21 && this.state.playerScore === this.state.dealerScore)\n      winner = 'ex aequo';\n    this.onEndOfRound({\n      number: this.props.roundNumber,\n      winner,\n      betDoubled: this.state.betDoubled,\n      playerCards: this.state.playerCards,\n      dealerCards: this.state.dealerCards,\n    });\n  }\n\n  startGameRound() {\n    this.getCards(4).then((resJson) =>\n      this.setState(\n        {\n          playerCards: [resJson.cards[0], resJson.cards[1]],\n          playerScore: this.calculateScore([resJson.cards[0], resJson.cards[1]]),\n          dealerCards: [resJson.cards[2], resJson.cards[3]],\n          dealerScore: this.calculateScore([resJson.cards[2], resJson.cards[3]]),\n        },\n        () => {\n          if (this.state.playerScore >= 21) this.checkResult();\n        },\n      ),\n    );\n  }\n\n  render() {\n    const playerCards = this.state.playerCards.map((card) => (\n      <Card key={JSON.stringify(card)} image={card.image} />\n    ));\n    const dealerCards = this.state.dealerCards.map((card, i) => {\n      if (i === 0 && !this.state.showDealersFstCard) return <Card key={card} />;\n      return <Card key={card} image={card.image} />;\n    });\n    const gameRoundHandlers = (\n      <div id={styles.gameRoundHandlers}>\n        <Button onClick={() => this.handleHit()}>Hit</Button>\n        <Button onClick={() => this.handleStand()}>Stand</Button>\n        <Button\n          disabled={!this.state.playerCards.length === 2}\n          onClick={() => this.handleDoubleDown()}\n        >\n          Double down\n        </Button>\n      </div>\n    );\n\n    return (\n      <div className={styles.GameRound} data-testid=\"GameRound\">\n        <div>\n          <span id={styles.roundNumber}>\n            {'Round '}\n            {this.props.roundNumber}\n          </span>\n          <div id={styles.round}>\n            <div className={styles.cardsContainer}>\n              <span>Player</span>\n              <div className={styles.cards}>{playerCards}</div>\n              <span id={styles.score}>\n                {'Score: '}\n                {this.state.playerScore}\n              </span>\n            </div>\n            <div className={styles.cardsContainer}>\n              <span>Dealer</span>\n              <div className={styles.cards}>{dealerCards}</div>\n              <span id={styles.score}>\n                {'Score: '}\n                {this.state.dealerScore}\n              </span>\n            </div>\n          </div>\n        </div>\n        {gameRoundHandlers}\n        <div id=\"appButtons\">\n          <Button onClick={() => this.props.saveGameRound(this.state)}>Save game</Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport styles from './RoundHistory.module.css';\nimport Card from '../Card/Card';\n\nexport default class RoundHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      historyHidden: true,\n    };\n  }\n\n  toggleHistory() {\n    this.setState((prevState) => ({ historyHidden: !prevState.historyHidden }));\n  }\n\n  render() {\n    console.log(this.props.rounds);\n    return (\n      <div data-testid=\"RoundHistory\" id=\"appButtons\">\n        <Button onClick={() => this.toggleHistory()}>\n          {this.state.historyHidden ? 'show round history' : 'hide round history'}\n        </Button>\n        <div className={this.state.historyHidden ? styles.hidden : styles.RoundHistory}>\n          <span className={styles.goldText}>Round history</span>\n          <table>\n            <thead>\n              <tr>\n                <th>Round</th>\n                <th>Winner</th>\n                <th>Players cards</th>\n                <th>Dealers cards</th>\n                <th>Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.rounds.map((round) => (\n                <tr>\n                  <td>{round.number}</td>\n                  <td>{round.winner}</td>\n                  <td className={styles.cards}>\n                    <div>\n                      {round.playerCards.map((card) => (\n                        <Card image={card.image} />\n                      ))}\n                    </div>\n                  </td>\n                  <td className={styles.cards}>\n                    <div>\n                      {round.dealerCards.map((card) => (\n                        <Card image={card.image} />\n                      ))}\n                    </div>\n                  </td>\n                  <td>{round.score}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nRoundHistory.propTypes = {};\n\nRoundHistory.defaultProps = {};\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport styles from './Game.module.css';\nimport Chip from '../Chip/Chip';\nimport { RANKING_KEY } from '../../AppConstants';\nimport Store from '../../Store';\nimport GameRound from '../GameRound/GameRound';\nimport RoundHistory from '../RoundHistory/RoundHistory';\n\nconst GAME_KEY = 'GAME_KEY';\nconst GAME_ROUND_KEY = 'GAME_ROUND_KEY';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bet: 0,\n      roundNumber: 0,\n      betPlaced: false,\n      roundsResults: [],\n      credit: 1000,\n      resultMessage: '',\n    };\n    this.handleEndOfRound = this.handleEndOfRound.bind(this);\n    this.saveGameInLocalStorage = this.saveGameInLocalStorage.bind(this);\n    this.saveGameRound = this.saveGameRound.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.continueLastGame) {\n      this.setState(Store.getState(GAME_KEY));\n    }\n    window.addEventListener('beforeunload', this.saveGameInLocalStorage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.saveGameInLocalStorage);\n  }\n\n  handleEndOfRound(result) {\n    Store.saveState(GAME_ROUND_KEY, null);\n    let newCredit;\n    const bet = result.betDoubled ? 2 * this.state.bet : this.state.bet;\n    if (result.winner === 'player') newCredit = this.state.credit + bet * 1.5;\n    else newCredit = this.state.credit - bet;\n    this.setState(\n      (prevState) => ({\n        roundsResults: [{ ...result, score: newCredit }, ...prevState.roundsResults],\n        betPlaced: false,\n        credit: newCredit,\n      }),\n      () => {\n        if (this.state.roundNumber === 5 || this.state.credit < 1) this.handleEndOfGame();\n        let resultMessage = 'Congratulations! You won this round!';\n        if (result.winner === 'dealer') resultMessage = 'You lost this round...';\n        else if (result.winner === 'ex aequo') resultMessage = 'Ex aequo!';\n        this.setState({ resultMessage });\n      },\n    );\n  }\n\n  handleEndOfGame() {\n    const newResult = { date: new Date().toLocaleString('en-US'), score: this.state.credit };\n    const ranking = [...(Store.getState(RANKING_KEY) || []), newResult];\n    ranking.sort((a, b) => (a.score <= b.score ? 1 : -1));\n    Store.saveState(RANKING_KEY, ranking.slice(0, 10));\n  }\n\n  raiseBet = (value) => {\n    this.setState((prevState) => ({\n      bet: prevState.bet + value,\n    }));\n  };\n\n  canStartNewRound() {\n    return !this.state.betPlaced && this.state.roundNumber < 5 && this.state.credit > 1;\n  }\n\n  placeBet() {\n    this.setState((prevState) => ({\n      betPlaced: true,\n      roundNumber: prevState.roundNumber + 1,\n    }));\n  }\n\n  summaryOfTheGame() {\n    const won = this.state.roundsResults.filter((r) => r.winner === 'player').length >= 3;\n    if (won)\n      return (\n        <div className={styles.goldText}>\n          <span>Congratulations, you won the game!</span>\n        </div>\n      );\n    return (\n      <div className={styles.goldText}>\n        <span>You lost the game!</span>\n      </div>\n    );\n  }\n\n  // /* eslint-disable class-methods-use-this */\n  // saveGameRound(ev) {\n  //   /* eslint-disable no-param-reassign */\n  //   ev = ev || window.event;\n  //   ev.preventDefault();\n  //   ev.returnValue = '';\n  //   return '';\n  // }\n\n  saveGameInLocalStorage() {\n    Store.saveState(GAME_KEY, this.state);\n    window.confirm('Game has been saved');\n  }\n\n  saveGameRound(state) {\n    Store.saveState(GAME_ROUND_KEY, state);\n    this.saveGameInLocalStorage();\n  }\n\n  render() {\n    const game = this.state.betPlaced && (\n      <GameRound\n        key={this.props.deckID}\n        deckID={this.props.deckID}\n        continueLastGame={this.props.continueLastGame}\n        onEndOfRound={this.handleEndOfRound}\n        saveGameRound={this.saveGameRound}\n        roundNumber={this.state.roundNumber}\n      />\n    );\n    const chips = <Chip clickCallback={this.raiseBet} />;\n    const betHandler = (\n      <div>\n        <div>{chips}</div>\n        <div id={styles.dealBtns}>\n          <Button disabled={this.state.bet === 0} onClick={() => this.setState({ bet: 0 })}>\n            clear\n          </Button>\n          <Button\n            className={styles.Button}\n            disabled={this.state.bet > this.state.credit || this.state.bet === 0}\n            onClick={() => this.placeBet()}\n          >\n            {`Bet ${this.state.bet}$`}\n          </Button>\n        </div>\n      </div>\n    );\n\n    return (\n      <div className={styles.Game} data-testid=\"Game\">\n        <div id={styles.credit}>\n          <img src=\"bag-147782_1280.png\" alt=\"Credit\" />\n          <span>\n            {this.state.credit}\n            {'$'}\n          </span>\n        </div>\n        {game}\n        {this.canStartNewRound() && betHandler}\n        {!this.state.betPlaced &&\n          (this.state.roundNumber === 5 || this.state.credit < 1) &&\n          this.summaryOfTheGame()}\n        {this.state.roundsResults.length > 0 && <RoundHistory rounds={this.state.roundsResults} />}\n        {!this.state.betPlaced && (\n          <div id=\"appButtons\">\n            <Button onClick={() => this.saveGameRound(null)}>Save game</Button>\n          </div>\n        )}\n        <Snackbar\n          anchorOrigin={{ vertical: 'center', horizontal: 'center' }}\n          className={styles.Info}\n          autoHideDuration={6000}\n          open={this.state.bet > this.state.credit}\n          onClose={() => this.setState({ bet: 0 })}\n          message=\"Your bet is higher than your credit!\"\n        />\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={!this.state.betPlaced && this.state.resultMessage !== ''}\n          message={this.state.resultMessage}\n          onClose={() => this.setState({ resultMessage: '' })}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PropTypes from 'prop-types';\nimport styles from './Ranking.module.css';\nimport { RANKING_KEY } from '../../AppConstants';\nimport Store from '../../Store';\n\nconst Ranking = ({ open, onClose }) => {\n  const loadRanking = () => Store.getState(RANKING_KEY) || [];\n  const table = (\n    <table data-testid=\"Ranking\">\n      <thead>\n        <tr>\n          <th>Place</th>\n          <th>Date</th>\n          <th>Score</th>\n        </tr>\n      </thead>\n      <tbody>\n        {loadRanking().map((result, i) => (\n          <tr key={JSON.stringify(result)}>\n            <td>{i + 1}</td>\n            <td>{result.date}</td>\n            <td>{result.score}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return (\n    <Dialog\n      className={styles.Ranking}\n      maxWidth=\"md\"\n      fullWidth\n      open={open}\n      onClose={() => onClose()}\n    >\n      <DialogTitle>\n        <span className={styles.goldText}>Ranking</span>\n      </DialogTitle>\n      {table}\n    </Dialog>\n  );\n};\n\nRanking.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nRanking.defaultProps = {};\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport Game from './components/Game/Game';\nimport { API_BASE_URL } from './AppConstants';\nimport Store from './Store';\nimport Ranking from './components/Ranking/Ranking';\n\nconst APP_KEY = 'APP_KEY';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deckID: '',\n      gameState: false,\n      continueLastGame: false,\n      rankingOpened: false,\n    };\n  }\n\n  componentDidMount() {\n    this.shuffle();\n  }\n\n  componentWillUnmount() {\n    Store.saveState(APP_KEY, this.state);\n  }\n\n  onRankingOpen() {\n    this.setState({ rankingOpened: true });\n  }\n\n  onRankingClose = () => {\n    this.setState({ rankingOpened: false });\n  };\n\n  continueGame() {\n    this.setState({ continueLastGame: true, gameState: true });\n  }\n\n  startGame() {\n    this.setState({ gameState: true });\n  }\n\n  shuffle() {\n    fetch(`${API_BASE_URL}new/shuffle/?deck_count=6`)\n      .then((res) => res.json())\n      .then((resJson) => this.setState({ deckID: resJson.deck_id }));\n  }\n\n  resetGame() {\n    this.shuffle();\n    this.setState({ gameState: false, continueLastGame: false });\n  }\n\n  render() {\n    const game = this.state.gameState && (\n      <Game\n        key={this.state.deckID}\n        deckID={this.state.deckID}\n        continueLastGame={this.state.continueLastGame}\n      />\n    );\n    return (\n      <div className={this.state.gameState ? 'App game' : 'App beginning'}>\n        <div id=\"background\" />\n        <div id=\"foreground\">\n          <h1>BLACKJACK</h1>\n          {game}\n\n          <div id=\"appButtons\">\n            {this.state.gameState ? (\n              <Button onClick={() => this.resetGame()}>New game</Button>\n            ) : (\n              <>\n                <Button className=\"Button\" onClick={() => this.startGame()}>\n                  Play\n                </Button>\n                <Button disabled={!Store.getState('GAME_KEY')} onClick={() => this.continueGame()}>\n                  Continue game\n                </Button>\n              </>\n            )}\n            <Button onClick={() => this.onRankingOpen()}>Ranking</Button>\n          </div>\n          <Ranking open={this.state.rankingOpened} onClose={this.onRankingClose} />\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}